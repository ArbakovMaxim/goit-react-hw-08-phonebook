{"version":3,"file":"static/js/544.6217cfb7.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactList.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","Pages/Contacts/Contacts.styled.js","Pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\nimport { Form } from 'formik';\n\nexport const ButtonSubmit = styled.button`\n  display: block;\n  margin-top: 20px;\n  cursor: pointer;\n`;\n\nexport const TitleBlock = styled.h2`\n  margin: 0;\n  margin-bottom: 5px;\n  font-size: ${p => p.theme.fontsSizes[3]}px;\n`;\n\nexport const WrapperForm = styled.div``;\n\nexport const Input = styled(Field)`\n  margin-bottom: 20px;\n`;\n\nexport const Eror = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.text};\n  font-size: ${p => p.theme.fontsSizes[0]}px;\n  width: 180px;\n`;\n\nexport const NameForm = styled.h2`\n  padding: 40px;\n  font-size: bold;\n  text-transform: uppercase;\n  color: #414141;\n`;\n\nexport const FormFormik = styled(Form)`\n  width: 100%;\n  padding: 2em;\n  position: relative;\n  border-radius: 3px;\n  border: 1px solid #b12816;\n  box-shadow: 0px 7px 16px -3px rgba(0, 0, 0, 0.5);\n  background: #bc3220;\n  background: -webkit-gradient(\n    left top,\n    right top,\n    color-stop(0%, #bc3220),\n    color-stop(29%, #db4a37),\n    color-stop(50%, #db4a37),\n    color-stop(71%, #db4a37),\n    color-stop(100%, #bc3220)\n  );\n  background: -webkit-linear-gradient(\n    left,\n    #bc3220 0%,\n    #db4a37 29%,\n    #db4a37 50%,\n    #db4a37 71%,\n    #bc3220 100%\n  );\n  background: linear-gradient(\n    to right,\n    #bc3220 0%,\n    #db4a37 29%,\n    #db4a37 50%,\n    #db4a37 71%,\n    #bc3220 100%\n  );\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#bc3220', endColorstr='#bc3220', GradientType=1 );\n`;\n","import * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ButtonSubmit,\n  TitleBlock,\n  WrapperForm,\n  Input,\n  Eror,\n  NameForm,\n  FormFormik,\n} from './ContactsForm.styled';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\nimport { toast } from 'react-toastify';\n\nexport const ContactsForm = ({ onSave }) => {\n  const contactsList = useSelector(contactsSelectors.getVisibleContacts);\n  const dispatch = useDispatch();\n  const hendleSubmit = (values, { resetForm }) => {\n    if (contactsList.some(contact => contact.name === values.name)) {\n      toast(`${values.name} is already in contacts`);\n    } else {\n      dispatch(contactsOperations.addContact(values));\n      onSave();\n      return;\n    }\n    resetForm();\n  };\n\n  const nameValid =\n    \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n  const numberValid =\n    /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\n\n  let schema = yup.object().shape({\n    name: yup\n      .string()\n      .max(15)\n      .min(5)\n      .matches(\n        nameValid,\n        'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore dArtagnan'\n      )\n      .required(),\n    number: yup\n      .string()\n      .max(12)\n      .min(7)\n      .matches(\n        numberValid,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required(),\n  });\n\n  return (\n    <WrapperForm>\n      <NameForm>Add contact</NameForm>\n      <Formik\n        initialValues={{ name: '', number: '' }}\n        validationSchema={schema}\n        onSubmit={hendleSubmit}\n      >\n        <FormFormik>\n          <TitleBlock>Name</TitleBlock>\n          <Input type=\"text\" name=\"name\" />\n          <Eror name=\"name\" component=\"div\" />\n          <TitleBlock>Number</TitleBlock>\n          <Input type=\"tel\" name=\"number\" />\n          <Eror name=\"number\" component=\"div\" />\n          <ButtonSubmit type=\"submit\">Add contact</ButtonSubmit>\n        </FormFormik>\n      </Formik>\n    </WrapperForm>\n  );\n};\n","import styled from 'styled-components';\nimport card from '../../images/card.png';\n\nexport const ContWrapper = styled.div``;\n\nexport const ContList = styled.ul`\n  display: flex;\n  direction: columns;\n  flex-wrap: wrap;\n`;\n\nexport const ContItem = styled.li`\n  background-image: url(${card});\n  background-size: cover;\n  height: 100px;\n  width: 220px;\n  background-color: green;\n  list-style: none;\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n    margin-right: 20px;\n  }\n`;\n\nexport const BtnDeleteContact = styled.button`\n  width: 60px;\n  margin-top: 10px;\n  margin-left: 80px;\n  margin-right: 80px;\n  font-family: 'Roboto';\n  font-size: 15px;\n  font-weight: bold;\n  color: #ffffff !important;\n  cursor: pointer;\n  border-radius: 21px;\n  border: 2px dashed #f3c846;\n  background: #ab8179;\n  background: linear-gradient(to top, #ab8179, #0a5b9e);\n  &:hover {\n    color: #a7e716 !important;\n    background: #0c0a9e;\n    background: linear-gradient(to top, #0c0a9e, #713226);\n  }\n`;\n\nexport const Name = styled.p`\n  margin-left: 48px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  font-weight: bold;\n  font-size: 15px;\n`;\nexport const Number = styled.p`\n  font-weight: bold;\n  font-size: 15px;\n  margin-left: 15px;\n`;\n\nexport const NoContact = styled.p`\n  font-weight: bold;\n  font-size: 15px;\n  text-align: center;\n  margin-top: 200px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n//import { toast } from 'react-toastify';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nimport {\n  ContWrapper,\n  ContList,\n  ContItem,\n  BtnDeleteContact,\n  Name,\n  Number,\n  NoContact,\n} from './ContactList.styled';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contactsList = useSelector(contactsSelectors.getVisibleContacts);\n\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\n\n  return (\n    <ContWrapper>\n      {contactsList.length === 0 ? (\n        <NoContact>You have no contacts. Please add.</NoContact>\n      ) : (\n        <ContList>\n          {contactsList.map(contacts => {\n            return (\n              <ContItem key={contacts.id}>\n                <Name>{contacts.name}:</Name>\n                <Number>{contacts.number}</Number>\n                <BtnDeleteContact\n                  type=\"button\"\n                  onClick={() => {\n                    onDeleteContact(contacts.id, contacts.name);\n                  }}\n                >\n                  Delete\n                </BtnDeleteContact>\n              </ContItem>\n            );\n          })}\n        </ContList>\n      )}\n    </ContWrapper>\n  );\n};\n\nexport default ContactsList;\n","import * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\nimport { TitleBlock } from 'components/ContactsForm/ContactsForm.styled';\nimport { changeFilter, contactsSelectors } from 'redux/contacts';\n\nlet schema = yup.object().shape({\n  name: yup.string().required(),\n});\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(contactsSelectors.getFilter);\n\n  const onChangeFilter = event => {\n    dispatch(changeFilter(event.target.value));\n  };\n\n  return (\n    <div>\n      <TitleBlock>Find contacts by name</TitleBlock>\n      <input\n        value={value}\n        type=\"text\"\n        name=\"filter\"\n        pattern={schema}\n        title=\"only sting\"\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  top: 200px;\n  left: 35%;\n  display: block;\n  margin-bottom: 80px;\n  width: 500px;\n  height: 360px;\n  background: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const BtnClose = styled.button`\n  position: absolute;\n  border: none;\n  padding: 0;\n  top: 15px;\n  right: 15px;\n  cursor: pointer;\n`;\n\nexport const Img = styled.img`\n  height: 24px;\n  width: 24px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, BtnClose, Content, Img } from './Modal.styled';\nimport close from '../../images/close.png';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') onClose();\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <Backdrop onClick={handleBackdropClick}>\n      <Content>\n        {children}\n        {\n          <BtnClose\n            onClick={() => {\n              onClose();\n            }}\n          >\n            <Img src={close} alt=\"\" />\n          </BtnClose>\n        }\n      </Content>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const ContWrapper = styled.div``;\n\nexport const ContList = styled.ul``;\n\nexport const ContItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const BtnAddContact = styled.button`\n  margin-left: 200px;\n  font-family: 'Montserrat';\n  font-size: 21px;\n  font-weight: bold;\n  color: #ecd600 !important;\n  cursor: pointer;\n  padding: 4px 5px;\n  border-radius: 21px;\n  border: 2px groove #5246f3;\n  background: #c92977;\n  background: linear-gradient(to top, #c92977, #f11f75);\n  &:hover {\n    color: #1644e7 !important;\n    background: #d8f652;\n  }\n`;\n\nexport const Wraper = styled.div`\n  display: flex;\n`;\n","import { ContactsForm } from 'components/ContactsForm/ContactsForm';\nimport ContactsList from 'components/ContactsList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '../../components/Modal/Modal';\n//import { HiPlus } from 'react-icons/hi';\n//import TodoEditor from '../components/TodoEditor';\n//import Filter from '../components/TodoFilter';\n//import Stats from '../components/Stats';\n//import IconButton from '../components/IconButton';\nimport {\n  contactsOperations,\n  contactsSelectors,\n} from '../../redux/contacts/index';\nimport { BtnAddContact, Wraper } from './Contacts.styled';\n\nconst barStyles = {\n  display: 'flex',\n  alignItems: 'flex-end',\n  marginBottom: 20,\n};\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const toggleModal = () => setIsModalOpen(state => !state);\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div style={barStyles}>{isLoadingContacts && <h1>Loading...</h1>}</div>\n      <Wraper>\n        <Filter />\n        <BtnAddContact onClick={toggleModal} aria-label=\"New contact\">\n          Add contact\n        </BtnAddContact>\n      </Wraper>\n      <ContactsList />\n      {isModalOpen && (\n        <Modal onClose={toggleModal}>\n          <ContactsForm onSave={toggleModal} />\n        </Modal>\n      )}\n    </>\n  );\n}\n"],"names":["ButtonSubmit","styled","TitleBlock","p","theme","fontsSizes","WrapperForm","Input","Field","Eror","ErrorMessage","colors","text","NameForm","FormFormik","Form","ContactsForm","onSave","contactsList","useSelector","contactsSelectors","dispatch","useDispatch","schema","yup","shape","name","max","min","matches","required","number","initialValues","validationSchema","onSubmit","values","resetForm","some","contact","contactsOperations","toast","type","component","ContWrapper","ContList","ContItem","card","BtnDeleteContact","Name","Number","NoContact","onDeleteContact","id","length","map","contacts","onClick","Filter","value","pattern","title","onChange","event","changeFilter","target","Backdrop","Content","BtnClose","Img","modalRoot","document","querySelector","onClose","children","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","src","close","alt","BtnAddContact","Wraper","barStyles","display","alignItems","marginBottom","Contacts","isLoadingContacts","useState","isModalOpen","setIsModalOpen","toggleModal","state","style"],"sourceRoot":""}